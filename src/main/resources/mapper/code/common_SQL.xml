<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="common">

	<select id="common.getGroupCd" parameterType="map" resultType="map">
		SELECT
		common_code_id
		,group_code
		,group_code_kr
		,group_code_desc
		,code_kr
		FROM
		dj_common_code
		WHERE active = 'Y'
		<if test="group_code != null and group_code != ''">
			AND group_code = #{group_code}
		</if>
		GROUP BY group_code
	</select>
	
	<select id="common.getCode" parameterType="map" resultType="map">
		SELECT
		*
		FROM dj_common_code
		WHERE group_code = #{code}
		AND
		active = 'Y'
		 <![CDATA[
		 and code_kr <>''
    	]]>
		ORDER BY 1, 2
	</select>
	
	<select id="getSubCd" parameterType="map" resultType="map">
		SELECT
		`code` AS `value`
		,code_kr AS `text`
		FROM dj_common_code
		WHERE group_code = #{code}
		AND
		active = 'Y'
		 <![CDATA[
		 and code_kr <>''
    	]]>
		ORDER BY 1, 2
	</select>
	
	<select id="getCodeByKr" parameterType="String" resultType="map">
		SELECT
		group_code
		,`code`
		FROM dj_common_code
		WHERE code_kr = #{param}
		AND
		active = 'Y'
		 <![CDATA[
		 and code_kr <>''
    	]]>
		ORDER BY 1, 2
	</select>
	
	<select id="getKidzDept" parameterType="map" resultType="map">
		SELECT
		group_code
		,`code`
		FROM dj_common_code
		WHERE group_code = #{code}
		AND
			code_kr = #{deptNm}
		AND
		active = 'Y'
		 <![CDATA[
		 and code_kr <>''
    	]]>
		ORDER BY 1, 2
	</select>

	<select id="common.empInformation" parameterType="map"
		resultType="map">
		SELECT
		t.*,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'POSITION'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.position_code) AS position,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'DUTY'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.duty_code) AS duty
		FROM
		(SELECT
		tce.emp_seq,
		tcem.emp_name,
		tcec.comp_seq,
		tcec.group_seq,
		tced.position_code,
		tced.duty_code,
		tcdm.dept_name,
		tced.dept_seq,
		CONCAT(tcem.addr,' ',tcem.detail_addr) AS addr,
		tce.erp_emp_num,
		tce.join_day,
		tce.mobile_tel_num AS phone
		FROM
		neos.t_co_emp tce
		INNER JOIN neos.t_co_emp_multi tcem ON tce.emp_seq = tcem.emp_seq
		AND tce.use_yn = 'Y'
		AND tcem.use_yn = 'Y'
		AND tcem.lang_code = 'kr'
		INNER JOIN neos.t_co_emp_comp tcec ON tce.emp_seq = tcec.emp_seq
		AND tcec.use_yn = 'Y' <!-- AND tcec.comp_seq = '1000' -->
		INNER JOIN neos.t_co_emp_dept tced ON tce.emp_seq = tced.emp_seq
		AND tced.use_yn = 'Y'
		INNER JOIN neos.t_co_dept_multi tcdm ON tced.dept_seq = tcdm.dept_seq AND tcdm.lang_code = 'kr'
		WHERE tced.main_dept_yn = 'Y'
		) t

		<!-- <choose> <when test="deptSeq != null and deptSeq != ''"> where t.dept_seq 
			= #{deptSeq} </when> <otherwise> </otherwise> </choose> -->

		<where>
			<if test="empSeq != null and empSeq != ''">
				AND t.emp_seq not in (${empSeq})
			</if>

			<if test="deptSeq != null and deptSeq != ''">
				AND t.dept_seq IN (#{deptSeq},(SELECT parent_dept_seq FROM neos.t_co_dept WHERE DEPT_SEQ = #{deptSeq} AND use_yn = 'Y'))
			</if>

			<if test="emp_name != null and emp_name != ''">
				AND t.emp_name LIKE CONCAT ('%',#{emp_name},'%')
			</if>


			<if test="dept_name != null and dept_name != ''">
				AND t.dept_name LIKE CONCAT ('%',#{dept_name},'%')
			</if>

			<if test="positionKey != null and positionKey != ''">
				AND t.position_code = #{positionKey}
			</if>

			<if test="dutyKey != null and dutyKey != ''">
				AND t.duty_code = #{dutyKey}
			</if>
		</where>


		LIMIT ${skip} , ${pageSize}
	</select>

	<select id="common.empInformationTotal" parameterType="map"
		resultType="int">
		SELECT COUNT(1) FROM (
		SELECT
		t.*,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'POSITION'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.position_code) AS position,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'DUTY'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.duty_code) AS duty
		FROM
		(SELECT
		tce.emp_seq,
		tcem.emp_name,
		tcec.comp_seq,
		tcec.group_seq,
		tced.position_code,
		tced.duty_code,
		tcdm.dept_name,
		tced.dept_seq,
		CONCAT(tcem.addr,' ',tcem.detail_addr) AS addr,
		tce.erp_emp_num,
		tce.join_day,
		tce.mobile_tel_num AS phone
		FROM
		neos.t_co_emp tce
		INNER JOIN neos.t_co_emp_multi tcem ON tce.emp_seq = tcem.emp_seq
		AND tce.use_yn = 'Y'
		AND tcem.use_yn = 'Y'
		AND tcem.lang_code = 'kr'
		INNER JOIN neos.t_co_emp_comp tcec ON tce.emp_seq = tcec.emp_seq
		AND tcec.use_yn = 'Y' <!-- AND tcec.comp_seq = '1000' -->
		INNER JOIN neos.t_co_emp_dept tced ON tce.emp_seq = tced.emp_seq
		AND tced.use_yn = 'Y'
		INNER JOIN neos.t_co_dept_multi tcdm ON tced.dept_seq = tcdm.dept_seq AND tcdm.lang_code = 'kr'
		WHERE tced.main_dept_yn = 'Y'
		) t
		<where>
			<if test="empSeq != null and empSeq != ''">
				AND t.emp_seq not in (${empSeq})
			</if>

			<if test="deptSeq != null and deptSeq != ''">
				AND t.dept_seq IN (#{deptSeq},(SELECT parent_dept_seq FROM neos.t_co_dept WHERE DEPT_SEQ = #{deptSeq} AND use_yn = 'Y'))
			</if>



			<if test="emp_name != null and emp_name != ''">
				AND t.emp_name LIKE CONCAT ('%',#{emp_name},'%')
			</if>


			<if test="dept_name != null and dept_name != ''">
				AND t.dept_name LIKE CONCAT ('%',#{dept_name},'%')
			</if>

			<if test="positionKey != null and positionKey != ''">
				AND t.position_code = #{positionKey}
			</if>

			<if test="dutyKey != null and dutyKey != ''">
				AND t.duty_code = #{dutyKey}
			</if>
		</where>



		) tt
	</select>
	
	<select id="common.getFileSeq" parameterType="map" resultType="int">
		SELECT
		CASE WHEN
		MAX(file_seq+0) IS NULL THEN 0
		ELSE MAX(file_seq+0)+1
		END AS file_seq
		FROM
		dj_attach_file
		WHERE
		target_table_name = #{tableName}
		AND
		target_id = #{targetKey}
	</select>

	<select id="common.selectEmp" parameterType="map" resultType="map">
		SELECT
		t.*,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'POSITION'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.position_code) AS position,
		(SELECT
		pm.dp_name
		FROM
		neos.t_co_comp_duty_position dp
		INNER JOIN
		neos.t_co_comp_duty_position_multi pm
		WHERE
		pm.lang_code = 'kr'
		AND pm.dp_seq = dp.dp_seq
		AND pm.dp_type = dp.dp_type
		AND pm.group_seq = dp.group_seq
		AND pm.comp_seq = dp.comp_seq
		AND dp.use_yn = 'Y'
		AND pm.use_yn = 'Y'
		AND pm.dp_type = 'DUTY'
		AND dp.group_seq = t.group_seq
		AND dp.dp_seq = t.duty_code) AS duty
		FROM
		(SELECT
		tce.emp_seq,
		tcem.emp_name,
		tcec.comp_seq,
		tcec.group_seq,
		tced.position_code,
		tced.duty_code,
		tcdm.dept_name,
		tced.dept_seq

		FROM
		neos.t_co_emp tce
		INNER JOIN neos.t_co_emp_multi tcem ON tce.emp_seq = tcem.emp_seq
		AND tce.use_yn = 'Y'
		AND tcem.use_yn = 'Y'
		AND tcem.lang_code = 'kr'
		INNER JOIN neos.t_co_emp_comp tcec ON tce.emp_seq = tcec.emp_seq
		AND tcec.use_yn = 'Y'
		INNER JOIN neos.t_co_emp_dept tced ON tce.emp_seq = tced.emp_seq
		AND tced.use_yn = 'Y'
		INNER JOIN neos.t_co_dept_multi tcdm ON tced.dept_seq = tcdm.dept_seq  AND tcdm.lang_code = 'kr') t
		<choose>
			<when test="empSeq != null and empSeq != ''">
				where t.emp_seq in (${empSeq})
			</when>
			<otherwise>
				where t.emp_seq = ''
			</otherwise>
		</choose>

	</select>


	<select id="common.fileList" resultType="Map" parameterType="Map">

		select * from dj_attach_file where target_table_name =
		#{tableName} and target_id = #{keyId}


	</select>

	<select id="common.fileDown" parameterType="map" resultType="map">
		select
		attach_file_id,
		target_id,
		real_file_name,
		file_extension,
		file_path,
		file_name
		from
		dj_attach_file
		WHERE attach_file_id = #{attach_file_id}

	</select>

	<delete id="common.fileDelete" parameterType="map">
		delete from
		dj_attach_file where attach_file_id = #{attach_file_id}
	</delete>
	
	<select id="common.getEmpName" parameterType="String" resultType="map">
		select emp_name
		from neos.t_co_emp_multi
		where use_yn = 'Y'
		and emp_seq = #{empSeq}
		and lang_code = 'kr'
	</select>
	
	<select id="common.getEmpDept" parameterType="String"	resultType="map">
		SELECT
		*
		FROM
		NEOS.T_CO_EMP_MULTI TCEM
		INNER JOIN
		NEOS.T_CO_EMP_DEPT TCED ON TCEM.EMP_SEQ = TCED.EMP_SEQ
		AND TCEM.LANG_CODE = 'KR'
		WHERE
		DEPT_SEQ = #{deptSeq}
		AND TCEM.USE_YN = 'Y'
		AND TCED.USE_YN = 'Y'
	</select>
	
	<select id="common.getAllDept" parameterType="map" resultType="map">
		SELECT
		*
		FROM
		NEOS.T_CO_DEPT_MULTI
		WHERE
		USE_YN = 'Y'
		<!-- AND COMP_SEQ = '1000' -->
		AND LANG_CODE = 'kr'
		AND NOT dept_name LIKE '%(êµ¬)%'
	</select>
	
	<select id="common.getCodeOne" parameterType="map" resultType="map">
		SELECT
		*
		FROM dj_common_code
		WHERE group_code = #{groupCode}
		AND `code` = #{code}
		AND active = 'Y'
		ORDER BY 1, 2
	</select>
	
	<select id="common.getRestFund" parameterType="String" resultType="Map">
		SELECT
		CASE WHEN SUM(TEP.education_cost) is NULL THEN (SELECT code_kr FROM
		dj_common_code WHERE group_code = 'EDU_SUPPORT_FUND' AND
		`code` = 'SF01')
		ELSE ((SELECT code_kr FROM dj_common_code WHERE group_code =
		'EDU_SUPPORT_FUND' AND `code` = 'SF01')-SUM(TEP.education_cost)) END
		AS restFund
		FROM
		dj_education TE
		INNER JOIN
		dj_education_PERSON TEP ON TE.EDUCATION_ID = TEP.EDUCATION_ID
		AND TE.ACTIVE = 'Y'
		AND TEP.ACTIVE = 'Y'
		AND TE.EDUCATION_TYPE_CODE_ID != 'ED03'
		WHERE (TEP.complete_state_code_id = 'EC02' OR TEP.complete_state_code_id =
		'EC04' OR TE.education_step_code_id = 'ES03' OR
		TEP.complete_state_code_id = 'EC01')
		AND TEP.education_emp_seq = #{empSeq}
		AND DATE_FORMAT(TE.education_start_date, '%Y') = DATE_FORMAT(NOW(), '%Y')
	</select>
	
	<select id="common.getDutyPosition" parameterType="String"	resultType="map">
		SELECT
		dp_seq, dp_name
		FROM
		NEOS.t_co_comp_duty_position_multi
		WHERE
		dp_type = #{subKey}
	</select>
	
	<select id="getKssfUserInfo" parameterType="String" resultType="map">
		SELECT
		*
		,(SELECT dp_name FROM neos.t_co_comp_duty_position_multi WHERE use_yn = 'Y'
		AND lang_code = 'kr' AND dp_type = 'DUTY' AND dp_seq = duty_code) AS
		dutyName
		,(SELECT dp_name FROM neos.t_co_comp_duty_position_multi WHERE use_yn = 'Y'
		AND lang_code = 'kr' AND dp_type = 'POSITION' AND dp_seq =
		position_code) AS positionName
		FROM
		NEOS.V_USER_INFO
		WHERE
		USE_YN = 'Y'
		AND main_dept_yn = 'Y'
		AND EMP_SEQ = #{key}
	</select>
	
	<select id="common.getEmpInfoByName" parameterType="String" resultType="map">

		SELECT
		*
		FROM
		neos.v_user_info
		WHERE
		use_yn = 'Y'
		AND
		emp_name = #{emp_name}
		AND MAIN_DEPT_YN = 'Y'
		GROUP BY emp_name
	</select>
	
	<select id="common.getEmpInfoByName2" parameterType="String" resultType="map">

		SELECT
		*
		FROM
		neos.v_user_info
		WHERE
		emp_name = #{emp_name}
		AND MAIN_DEPT_YN = 'Y'
		GROUP BY emp_name
	</select>
	
	<select id="common.getDept" parameterType="String" resultType="map">
		select
		get_dp_name(#{empSeq}, 'DEPT') as dept,
		get_dp_name(#{empSeq}, 'POSITION') as position,
		get_dp_name(#{empSeq}, 'DUTY') as duty
	</select>
	
	<select id="common.getDeptList" parameterType="String"
		resultType="map">
		SELECT
		dept_seq, dept_name
		FROM
		NEOS.t_co_dept_multi
		 WHERE lang_code = 'kr'
		 AND NOT dept_name LIKE '%(êµ¬)%'
		 AND use_yn = 'Y'
	</select>
	
	<select id="common.getHeader" parameterType="String" resultType="map">
		SELECT
		emp_seq, CONCAT(dept_name,' ',emp_name, ' ', duty) AS nameDuty, emp_name
		FROM
		v_emp_info
		WHERE
		login_id = fn_getDeptHeader(#{empSeq}, #{id})
		
	</select>
	
	<select id="common.getUpDeptName" parameterType="String" resultType="map">

		SELECT 
       		parent_dept_seq,
	    	up_dept_name
		FROM
		   	v_emp_info
	    WHERE
	       dept_seq = #{deptSeq}
	    AND
	       emp_seq = #{empSeq}
		GROUP BY
	       emp_seq
			
	</select>

	<select id="common.replaceHolidayChangeCode">
		call SP_DJ_REPLACE_HOLIDAY_CHANGE_CODE();
	</select>

	<select id="common.getLeader" parameterType="String" resultType="map">
		SELECT
		emp_seq, CONCAT(dept_name,' ',emp_name, ' ', duty) AS nameDuty, emp_name
		FROM
		v_emp_info
		WHERE
		login_id = fn_getTeamLeader(#{empSeq})
		
	</select>
	
	<update id="dailyWorkAgree" parameterType="map">
		call SP_DJ_WORK_AGREE_BATCH(#{night_work_reward})
	</update>
	
	<update id="common.setAttCode">
		call SP_DJ_ATT_CODE_SET()
	</update>
	
	<update id="monthlyWorkPlanMake" parameterType="map">
		call SP_DJ_WORKPLAN_BATCH()
	</update>

	<update id="common.vcatnUseHistUpdate">
		CALL SP_VCATN_USE_HIST_UPDATE()
	</update>
</mapper>    